name: Notebook Testing

on:
  push:
    branches: [ main, develop ]
    paths: 
      - 'notebooks/**'
      - 'src/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'notebooks/**'
      - 'src/**'

jobs:
  test-notebooks:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install nbconvert jupyter
    
    - name: Execute notebooks
      run: |
        for notebook in notebooks/*.ipynb; do
          echo "Testing $notebook"
          jupyter nbconvert --to notebook --execute --inplace "$notebook"
        done
    
    - name: Check notebook outputs
      run: |
        # Check if notebooks executed without errors
        python -c "
        import nbformat
        import sys
        import glob
        
        failed_notebooks = []
        for notebook_path in glob.glob('notebooks/*.ipynb'):
            with open(notebook_path, 'r') as f:
                nb = nbformat.read(f, as_version=4)
            
            for cell in nb.cells:
                if cell.cell_type == 'code' and 'outputs' in cell:
                    for output in cell.outputs:
                        if output.get('output_type') == 'error':
                            failed_notebooks.append(notebook_path)
                            break
        
        if failed_notebooks:
            print(f'Failed notebooks: {failed_notebooks}')
            sys.exit(1)
        else:
            print('All notebooks executed successfully')
        "
